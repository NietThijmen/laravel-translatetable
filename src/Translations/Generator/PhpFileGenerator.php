<?php

namespace NietThijmen\LaravelTranslatetable\Translations\Generator;

class PhpFileGenerator
{
    /**
     * @return string the PHP file template with placeholders for data and current date
     */
    public function getFileTemplate(): string
    {
        return '
<?php
/**
This file is generated by laravel-translatetable $currentDateString
You can safely delete it and regenerate it with the command:
php artisan translations:from-spreadsheet
**/

return $data;
';
    }

    /**
     * Use a Blade stub to generate a PHP translation file from an array of translations.
     * I neeeed to make this more robust.
     *
     * @phpstan-ignore-next-line missingType.iterableValue TODO: Get this working with phpstan as the types are correct (ugh)
     */
    public function generate(array $translations): string
    {
        $template = $this->getFileTemplate();
        $data = var_export($translations, true);
        $currentDateString = date('Y-m-d H:i:s');

        $template = str_replace(['$data', '$currentDateString'], [$data, $currentDateString], $template);

        return $template;
    }

    /**
     * Generate a PHP translation file and save it to the given file path.
     *
     * @param  array  $translations  the translations to generate the file from
     * @param  string  $filePath  the file path to save the generated file to
     *
     * @phpstan-ignore-next-line missingType.iterableValue TODO: Get this working with phpstan as the types are correct (ugh)
     */
    public function generateToFile(
        array $translations,
        string $filePath
    ): void {
        $content = $this->generate($translations);
        file_put_contents($filePath, $content);
    }
}
